%% closeloop_UDS_test
% takes incidence parameters generated by roberto_UDS_analysis and checks
% upstates qualities


% TODO


% upstate amplitude (AUC?), see below
% check immediately after stim whether laser has effect in following x
% seconds?

% link mychan to detection chan from detection script
function closeloop_UDS_test(allchans_raw,indices,my_chan,fs,baseline_min)



if ~exist('my_chan', 'var') || isempty(my_chan)
    my_chan = 1;  %default assume one pulsechan
end

data = allchans_raw(my_chan);
indices_fs = indices*fs/200; %corrects for oversampling in detection script (original Fs = 20 KHz)

if ~isempty(find(indices_fs > size(data,2))) %fixes bug whereby upsampled indices overshoot original recording
    [row col] = find(indices_fs > size(data,2));
    indices_fs=indices_fs([1:row(1)-1],:); %chops off (first) indices that exceed matrix dimensions
end
laser = allchans_raw(33,:);
laser_on = find(laser>0.8);
%% check laser detection
% x=1:length(laser);
% plot(x,laser)
% hold on
% plot(x(laser_on),laser(laser_on),'o')
baseline_indices = [1,baseline_min*60*fs];

test_indices = [baseline_min*60*fs+1,baseline_min*60*fs+1 + baseline_min*60*fs+1]; %test period with laser on (5 bin with laser stim)

baseline_upstates = find(indices_fs(:,1) < baseline_indices(2)); % provides starting indices of all upstates in baseline
test_upstates = find(indices_fs(:,1) > test_indices(1) & indices_fs(:,1) < test_indices(2));

baseline_duration = indices_fs(baseline_upstates,2)-indices_fs(baseline_upstates,1);
test_duration = indices_fs(test_upstates,2)-indices_fs(test_upstates,1);

%%
%amplitude options = max(snippet)-min(snippet)
% or trapz(signal) (trapezoidal in tegration auc)


